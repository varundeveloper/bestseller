{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n   mutation scriptTagDelete($id: ID!){\\n       scriptTagDelete(id: $id){\\n           deletedScriptTagId\\n           userErrors{\\n               field\\n               message\\n           }\\n       }\\n   }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n query{\\n     scriptTags(first: 40){\\n         edges{\\n             node{\\n                 id\\n                 src\\n                 displayScope\\n             }\\n         }\\n     }\\n }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n   mutation scriptTagCreate($input: ScriptTagInput!){\\n       scriptTagCreate(input: $input){\\n           scriptTag{\\n               id\\n           }\\n           userErrors{\\n               field\\n               message\\n           }\\n       }\\n   }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { Button, Card, Layout, Page, ResourceList, Stack } from '@shopify/polaris';\nvar CREATE_SCRIPT_TAG = gql(_templateObject());\nvar QUERY_SCRIPTTAGS = gql(_templateObject2());\nvar DELETE_SCRIPTTAG = gql(_templateObject3());\n\nfunction ScriptPage() {\n  _s();\n\n  var _useMutation = useMutation(CREATE_SCRIPT_TAG),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createScripts = _useMutation2[0];\n\n  var _useMutation3 = useMutation(DELETE_SCRIPTTAG),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      deleteScripts = _useMutation4[0];\n\n  var _useQuery = useQuery(QUERY_SCRIPTTAGS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"div\", null, \"loading..\");\n  if (error) return __jsx(\"div\", null, error.message);\n  console.log(\"this is script data\", data);\n  return __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"These are the scxript tags\",\n    sectioned: true\n  }, __jsx(\"p\", null, \"create or delete script tag\"))), __jsx(Layout.Section, {\n    secondary: true\n  }, __jsx(Card, {\n    title: \"Delete tag\",\n    sectioned: true\n  }, __jsx(Button, {\n    primary: true,\n    size: \"slim\",\n    type: \"submit\",\n    onClick: function onClick() {\n      createScripts({\n        variables: {\n          input: {\n            src: 'https://4d2ce9cb9eab.ngrok.io/test-script.js',\n            displayScope: \"ALL\"\n          },\n          refetchQueries: [{\n            query: QUERY_SCRIPTTAGS\n          }]\n        }\n      });\n    }\n  }, \"Create script tag\"))), __jsx(Layout.Section, null, __jsx(Card, null, __jsx(ResourceList, {\n    showHeader: true,\n    resourceName: {\n      singular: 'Script',\n      plural: 'Scripts'\n    },\n    items: data.scriptTags.edges,\n    renderItem: function renderItem(item) {\n      return __jsx(ResourceList.Item, {\n        id: item.id\n      }, __jsx(Stack, null, __jsx(Stack.Item, null, __jsx(\"p\", null, item.node.id)), __jsx(Stack.Item, null, __jsx(Button, {\n        type: \"submit\",\n        onClick: function onClick() {\n          deleteScripts({\n            variables: {\n              id: item.node.id\n            },\n            refetchQueries: [{\n              query: QUERY_SCRIPTTAGS\n            }]\n          });\n        }\n      }, \"Delete Script Tag\"))));\n    }\n  })))));\n}\n\n_s(ScriptPage, \"vEez66HRLTXVYhV5eSzb2nSu0zc=\", false, function () {\n  return [useMutation, useMutation, useQuery];\n});\n\n_c = ScriptPage;\nexport default ScriptPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScriptPage\");","map":{"version":3,"sources":["C:/Users/Sing/Desktop/app/shopifynew/pages/script-page.js"],"names":["gql","useQuery","useMutation","Button","Card","Layout","Page","ResourceList","Stack","CREATE_SCRIPT_TAG","QUERY_SCRIPTTAGS","DELETE_SCRIPTTAG","ScriptPage","createScripts","deleteScripts","loading","error","data","message","console","log","variables","input","src","displayScope","refetchQueries","query","singular","plural","scriptTags","edges","item","id","node"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport {Button, Card, Layout, Page, ResourceList, Stack} from '@shopify/polaris';\r\n\r\nconst CREATE_SCRIPT_TAG =gql`\r\n   mutation scriptTagCreate($input: ScriptTagInput!){\r\n       scriptTagCreate(input: $input){\r\n           scriptTag{\r\n               id\r\n           }\r\n           userErrors{\r\n               field\r\n               message\r\n           }\r\n       }\r\n   }\r\n`;\r\n\r\nconst QUERY_SCRIPTTAGS = gql`\r\n query{\r\n     scriptTags(first: 40){\r\n         edges{\r\n             node{\r\n                 id\r\n                 src\r\n                 displayScope\r\n             }\r\n         }\r\n     }\r\n }\r\n`;\r\n\r\nconst DELETE_SCRIPTTAG = gql`\r\n   mutation scriptTagDelete($id: ID!){\r\n       scriptTagDelete(id: $id){\r\n           deletedScriptTagId\r\n           userErrors{\r\n               field\r\n               message\r\n           }\r\n       }\r\n   }\r\n`;\r\n\r\nfunction ScriptPage(){\r\n\r\n   const [createScripts] = useMutation(CREATE_SCRIPT_TAG);\r\n   const [deleteScripts] = useMutation(DELETE_SCRIPTTAG);\r\n    const {loading, error, data} =useQuery(QUERY_SCRIPTTAGS);\r\n    if (loading) return <div>loading..</div>;\r\n    if (error) return <div>{error.message}</div>;\r\n    console.log(\"this is script data\",data)\r\n    return(\r\n       \r\n          <Page>\r\n              <Layout>\r\n                  <Layout.Section>\r\n                      <Card title=\"These are the scxript tags\" sectioned>\r\n                          <p>\r\n                              create or delete script tag\r\n                          </p>\r\n                      </Card>\r\n                  </Layout.Section>\r\n                  <Layout.Section secondary>\r\n                      <Card title=\"Delete tag\" sectioned>\r\n                          <Button \r\n                          primary\r\n                          size=\"slim\"\r\n                          type=\"submit\" onClick={() =>{\r\n                              createScripts({\r\n                                  variables:{\r\n                                      input:{\r\n                                          src: 'https://4d2ce9cb9eab.ngrok.io/test-script.js',\r\n                                          displayScope: \"ALL\"\r\n                                      },\r\n                                      refetchQueries: [{query: QUERY_SCRIPTTAGS }] \r\n                                  }\r\n                                  \r\n                              })\r\n                          }}\r\n                          >\r\n                              Create script tag\r\n                          </Button>\r\n                      </Card>\r\n                  </Layout.Section>\r\n                  <Layout.Section>\r\n                      <Card>\r\n                          <ResourceList\r\n                            showHeader\r\n                            resourceName={{ singular: 'Script', plural: 'Scripts'}}\r\n                            items={data.scriptTags.edges}\r\n                            renderItem={item => {\r\n                                return(\r\n                                    <ResourceList.Item id={item.id}>\r\n                                        <Stack>\r\n                                            <Stack.Item>\r\n                                               <p>{item.node.id}</p>\r\n                                            </Stack.Item>\r\n                                            <Stack.Item>\r\n                                                <Button type=\"submit\" onClick={() => {\r\n                                                    deleteScripts({\r\n                                                        variables:{\r\n                                                            id: item.node.id\r\n                                                        },\r\n                                                        refetchQueries: [{query: QUERY_SCRIPTTAGS}]\r\n                                                    })\r\n                                                }}>\r\n                                                    Delete Script Tag\r\n                                                </Button>\r\n                                            </Stack.Item>\r\n                                        </Stack>\r\n                                    </ResourceList.Item>\r\n                                )\r\n                            }}\r\n                          />\r\n                      </Card>\r\n                  </Layout.Section>\r\n              </Layout>\r\n          </Page>\r\n        )\r\n}\r\n\r\nexport default ScriptPage;"]},"metadata":{},"sourceType":"module"}