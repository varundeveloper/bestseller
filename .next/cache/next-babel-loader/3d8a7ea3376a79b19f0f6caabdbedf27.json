{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery getProducts($ids: [ID!]! ){\\n    nodes(ids: $ids){\\n      ... on Product{\\n        title\\n        handle\\n        id\\n        images(first: 1){\\n          edges{\\n            node{\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 1){\\n          edges{\\n            node{\\n              price\\n              id\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail, Layout } from '@shopify/polaris';\nimport store from 'store-js';\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nfunction ProductList() {\n  _s();\n\n  var _useQuery = useQuery(GET_PRODUCTS_BY_ID, {\n    variables: {\n      ids: store.get('ids')\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"div\", null, \"loading...\");\n  if (error) return __jsx(\"div\", null, error.message);\n  console.log('this is data', data);\n  return __jsx(Card, null, __jsx(ResourceList, {\n    showHeader: true,\n    resourceName: {\n      singular: \"Product\",\n      plural: \"Products\"\n    },\n    items: data.nodes,\n    renderItem: function renderItem(item) {\n      var media = __jsx(Thumbnail, {\n        source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n        alt: item.images.edges[0] ? item.images.edges[0].altText : ''\n      });\n\n      var price = item.variants.edges[0].node.price;\n      return __jsx(ResourceList.Item, {\n        id: item.id,\n        media: media,\n        accessibilityLabel: \"view details for \".concat(item.title)\n      }, __jsx(Stack, null, __jsx(Stack.Item, {\n        fill: true\n      }, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, item.title)), __jsx(Stack.Item, null, __jsx(\"p\", null, \"$\", price))));\n    }\n  }));\n}\n\n_s(ProductList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["C:/Users/Sing/Desktop/app/shopifynew/pages/components/ProductsList.js"],"names":["gql","useQuery","Card","ResourceList","Stack","TextStyle","Thumbnail","Layout","store","GET_PRODUCTS_BY_ID","ProductList","variables","ids","get","loading","error","data","message","console","log","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAiB,aAAjB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+CC,SAA/C,EAA0DC,MAA1D,QAAwE,kBAAxE;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAIA,IAAMC,kBAAkB,GAAGT,GAAH,mBAAxB;;AA4BA,SAASU,WAAT,GAAsB;AAAA;;AAAA,kBAEeT,QAAQ,CAACQ,kBAAD,EAAqB;AAACE,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAEJ,KAAK,CAACK,GAAN,CAAU,KAAV;AAAP;AAAZ,GAArB,CAFvB;AAAA,MAEVC,OAFU,aAEVA,OAFU;AAAA,MAEDC,KAFC,aAEDA,KAFC;AAAA,MAEMC,IAFN,aAEMA,IAFN;;AAIlB,MAAIF,OAAJ,EAAa,OAAO,gCAAP;AAEjB,MAAGC,KAAH,EAAU,OAAO,mBAAOA,KAAK,CAACE,OAAb,CAAP;AAEVC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,IAA5B;AACI,SAGQ,MAAC,IAAD,QACE,MAAC,YAAD;AACA,IAAA,UAAU,MADV;AAEA,IAAA,YAAY,EAAI;AAAEI,MAAAA,QAAQ,EAAE,SAAZ;AAAuBC,MAAAA,MAAM,EAAE;AAA/B,KAFhB;AAGA,IAAA,KAAK,EAAKL,IAAI,CAACM,KAHf;AAIA,IAAA,UAAU,EAAK,oBAAAC,IAAI,EAAG;AACpB,UAAMC,KAAK,GACT,MAAC,SAAD;AACE,QAAA,MAAM,EACJD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IAAuBH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BC,WAAjD,GAA+D,EAFnE;AAIE,QAAA,GAAG,EACDL,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IAAuBH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBG,OAA5C,GAAsD;AAL1D,QADF;;AAUA,UAAMC,KAAK,GAAGP,IAAI,CAACQ,QAAL,CAAcL,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BG,KAA1C;AACA,aACE,MAAC,YAAD,CAAc,IAAd;AACG,QAAA,EAAE,EAAIP,IAAI,CAACS,EADd;AAEG,QAAA,KAAK,EAAGR,KAFX;AAGG,QAAA,kBAAkB,6BAAsBD,IAAI,CAACU,KAA3B;AAHrB,SAKA,MAAC,KAAD,QACG,MAAC,KAAD,CAAO,IAAP;AAAY,QAAA,IAAI;AAAhB,SACG,MAAC,SAAD;AAAW,QAAA,SAAS,EAAC;AAArB,SACKV,IAAI,CAACU,KADV,CADH,CADH,EAMG,MAAC,KAAD,CAAO,IAAP,QACE,sBAAKH,KAAL,CADF,CANH,CALA,CADF;AAkBD;AAlCD,IADF,CAHR;AA6CH;;GAtDQpB,W;UAE4BT,Q;;;KAF5BS,W;AAwDT,eAAeA,WAAf","sourcesContent":["import gql from  'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail, Layout } from '@shopify/polaris';\r\nimport store from 'store-js';\r\n\r\n\r\n\r\nconst GET_PRODUCTS_BY_ID = gql`\r\nquery getProducts($ids: [ID!]! ){\r\n    nodes(ids: $ids){\r\n      ... on Product{\r\n        title\r\n        handle\r\n        id\r\n        images(first: 1){\r\n          edges{\r\n            node{\r\n              originalSrc\r\n              altText\r\n            }\r\n          }\r\n        }\r\n        variants(first: 1){\r\n          edges{\r\n            node{\r\n              price\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction ProductList(){\r\n\r\n    const { loading, error, data } = useQuery(GET_PRODUCTS_BY_ID, {variables: { ids: store.get('ids')}})\r\n\r\n    if (loading) return <div>loading...</div>\r\n\r\nif(error) return <div>{ error.message }</div>\r\n\r\nconsole.log('this is data', data)\r\n    return(\r\n       \r\n         \r\n            <Card>\r\n              <ResourceList\r\n              showHeader\r\n              resourceName = {{ singular: \"Product\", plural: \"Products\"}}\r\n              items = { data.nodes }\r\n              renderItem = { item =>{\r\n                const media = (\r\n                  <Thumbnail \r\n                    source = {\r\n                      item.images.edges[0] ? item.images.edges[0].node.originalSrc : ''\r\n                    }\r\n                    alt={\r\n                      item.images.edges[0] ? item.images.edges[0].altText : ''\r\n                    }\r\n                  />\r\n                );\r\n                const price = item.variants.edges[0].node.price;\r\n                return(\r\n                  <ResourceList.Item \r\n                     id = {item.id}\r\n                     media ={media}\r\n                     accessibilityLabel={`view details for ${item.title}`}\r\n                  >\r\n                  <Stack>\r\n                     <Stack.Item fill>\r\n                        <TextStyle variation='strong'> \r\n                            {item.title}\r\n                        </TextStyle>\r\n                     </Stack.Item>\r\n                     <Stack.Item>\r\n                       <p>${price}</p>\r\n                     </Stack.Item>\r\n                  </Stack>\r\n                  </ResourceList.Item>\r\n                )\r\n              }}\r\n              />\r\n                \r\n            </Card>\r\n        \r\n      \r\n    )\r\n}\r\n\r\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}