{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n query{\\n     scriptTags(first: 5){\\n         edges{\\n             node{\\n                 id\\n                 src\\n                 displayScope\\n             }\\n         }\\n     }\\n }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n   mutation scriptTagCreate($input: ScriptTagInput!){\\n       scriptTagCreate(input: $input){\\n           scriptTag{\\n               id\\n           }\\n           userErrors{\\n               field\\n               message\\n           }\\n       }\\n   }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nvar CREATE_SCRIPT_TAG = gql(_templateObject());\nvar QUERY_SCRIPTTAGS = gql(_templateObject2());\n\nfunction ScriptPage() {\n  _s();\n\n  var _useQuery = useQuery(QUERY_SCRIPTTAGS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"div\", null, \"loading..\");\n  if (error) return __jsx(\"div\", null, error.message);\n  console.log(\"this is script data\", data);\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"These are script tags right now\"), data.scriptTags.edges.map(function (item) {\n    return __jsx(\"div\", {\n      key: item.node.id\n    }, __jsx(\"p\", null, item.node.id));\n  }));\n}\n\n_s(ScriptPage, \"ATRudwUnWENk7lEGiyv3yjumjxE=\", false, function () {\n  return [useQuery];\n});\n\n_c = ScriptPage;\nexport default ScriptPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScriptPage\");","map":{"version":3,"sources":["C:/Users/Sing/Desktop/app/shopifynew/pages/script-page.js"],"names":["gql","useQuery","useMutation","CREATE_SCRIPT_TAG","QUERY_SCRIPTTAGS","ScriptPage","loading","error","data","message","console","log","scriptTags","edges","map","item","node","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AAEA,IAAMC,iBAAiB,GAAEH,GAAF,mBAAvB;AAcA,IAAMI,gBAAgB,GAAGJ,GAAH,oBAAtB;;AAaA,SAASK,UAAT,GAAqB;AAAA;;AAAA,kBACaJ,QAAQ,CAACG,gBAAD,CADrB;AAAA,MACVE,OADU,aACVA,OADU;AAAA,MACDC,KADC,aACDA,KADC;AAAA,MACMC,IADN,aACMA,IADN;;AAEjB,MAAIF,OAAJ,EAAa,OAAO,+BAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCH,IAAlC;AACA,SACO,mBACI,oDADJ,EAEKA,IAAI,CAACI,UAAL,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA0B,UAAAC,IAAI,EAAI;AAC/B,WACI;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,IAAL,CAAUC;AAApB,OACI,iBAAIF,IAAI,CAACC,IAAL,CAAUC,EAAd,CADJ,CADJ;AAKH,GANA,CAFL,CADP;AAeH;;GApBQZ,U;UACyBJ,Q;;;KADzBI,U;AAsBT,eAAeA,UAAf","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\n\r\nconst CREATE_SCRIPT_TAG =gql`\r\n   mutation scriptTagCreate($input: ScriptTagInput!){\r\n       scriptTagCreate(input: $input){\r\n           scriptTag{\r\n               id\r\n           }\r\n           userErrors{\r\n               field\r\n               message\r\n           }\r\n       }\r\n   }\r\n`;\r\n\r\nconst QUERY_SCRIPTTAGS = gql`\r\n query{\r\n     scriptTags(first: 5){\r\n         edges{\r\n             node{\r\n                 id\r\n                 src\r\n                 displayScope\r\n             }\r\n         }\r\n     }\r\n }\r\n`;\r\nfunction ScriptPage(){\r\n    const {loading, error, data} =useQuery(QUERY_SCRIPTTAGS)\r\n    if (loading) return <div>loading..</div>;\r\n    if (error) return <div>{error.message}</div>;\r\n    console.log(\"this is script data\",data)\r\n    return(\r\n           <div>\r\n               <h1>These are script tags right now</h1>\r\n               {data.scriptTags.edges.map(item => {\r\n                   return(\r\n                       <div key={item.node.id}>\r\n                           <p>{item.node.id}</p>\r\n                       </div>\r\n                   )\r\n               }\r\n\r\n               )}\r\n           </div>\r\n  \r\n        )\r\n}\r\n\r\nexport default ScriptPage;"]},"metadata":{},"sourceType":"module"}